function createfigure(commonphase,H,  params, frame,sim, instr )
%CREATEFIGURE(Y1,Y2,Y3,X1,Y4,X2,Y5)
%  Y1:  vector of y data
%  Y2:  vector of y data
%  Y3:  vector of y data
%  X1:  vector of x data
%  Y4:  vector of y data
%  X2:  vector of x data
%  Y5:  vector of y data
Y1 = frame.EVM_dB_sc;
Y2 = frame.EVM_dB_sym;
Y3 = commonphase;
Y4 = frame.fftout(1,:);
Y5 = frame.idealout(1,:);
Y6 = zeros(size(H));
for ii=1:(length(params.LTFindex))
    idx=params.LTFindex(ii);

    Y6(params.LTFindex(ii)) = inv(H(params.LTFindex(ii)));

end

Rb = 1/params.SampleTime;

snr = frame.snr;

% [snr, OSNR, mean_pwr, mean_noise_power] = get_snrt(in, Rb);
%  Auto-generated by MATLAB on 28-Nov-2012 22:20:38

% Create figure
figure1 = figure;
annotation(figure1,'textbox',...
    [0.11402475780409 0.937219730941704 0.254113024757804 0.047085201793722],...
    'String',{sim.filname},...
    'FitBoxToText','off','EdgeColor','none');

% Create axes
axes1 = axes('Parent',figure1,...
    'Position',[0.430622837370242 0.578142076502732 0.325911528150134 0.325081196769781]);
hold(axes1,'all');

% Create plot
plot( Y1(:,1),'Parent',axes1);
xlim(axes1,[0 length(Y1)]); 
ylim([ -26 -10]);
% Create xlabel
xlabel('subcarrier');
ylabel('EVM');

% legend(axes1,'show');
% Create axes
axes2 = axes('Parent',figure1,...
    'Position',[0.430299544514226 0.126393442622951 0.325911528150134 0.341162790697674]);
hold(axes2,'all');

if ( size(Y4,1) == 2  )
    plot(Y4(2,:),'Parent',axes2,'MarkerSize',1,'Marker','.','LineStyle','none','Color',[0 0 1]);
    xlim(axes2,[ -1.5 1.5]);
    ylim(axes2, [ -1.5 1.5]);
    box(axes2,'on');
    grid(axes2,'on');
else
% Create plot
% plot(1:length(Y2), Y2,'Parent',axes2,'DisplayName',['EVM', str]);
% plot(1:length(Y2), Y3,'r', 'Parent',axes2,'DisplayName','commonphase');
plotyy(1:length(Y2), Y2, 1:length(Y2), Y3(1:length(Y2)), 'Parent',axes2);
xlim(axes2,[1 length(Y2)]); 
% xlabel('symbol');
% hist( mod( frame.diff_rtx, params.Nsd), params.Nsd);
% xlim(axes2,[1 params.Nsd]); 
% Create xlabel

% xlabel('subcarrier');
end

% Create legend
% legend(axes2,'show');

% Create axes
axes3 = axes('Parent',figure1,...
    'Position',[0.0486946448524397 0.120757768998663 0.311018766756032 0.342457305502847]);
box(axes3,'on');
hold(axes3,'all');

% Create plot
phase_rot =  exp(  1 *1j*[0: (params.NFFT-1)]*2*pi/params.NFFT*(sim.syncpoint)) ; 
if ( size(Y6,1)==1)
    plot(abs(Y6 .* phase_rot ),'Parent',axes3,'Color',[0 1 0]);
    plot(real(Y6 .* phase_rot ),'Parent',axes3,'Color',[1 0 0]);
    plot(imag(Y6 .* phase_rot ),'Parent',axes3,'Color',[0 0 1]);
%       plot(angle(Y6),'Parent',axes3,'Color',[0 0 1]);
else
    H11(1:size(Y6,3))=Y6(1,1,1:size(Y6,3));
    H22(1:size(Y6,3))=Y6(2,2,1:size(Y6,3));
    plot(abs(H22),'Parent',axes3,'Color',[0 1 0],'DisplayName','H22');
    plot(real(H22),'Parent',axes3,'Color',[1 0 0],'DisplayName','H22');
    plot(imag(H22),'Parent',axes3,'Color',[0 0 1],'DisplayName','H22');
%     plot(imag(H22),'Parent',axes3,'Color',[1 0 0],'DisplayName','imag H22');    
%     plot(real(H22),'Parent',axes3,'Color',[0 0 1],'DisplayName','real H22');
%     plot(real(Y6),'Parent',axes3,'Color',[1 0 0]);
%     plot(imag(Y6),'Parent',axes3,'Color',[0 0 1]);    
end

% xlim(axes3,[0 size(Y6,3)+2]); 

% Create axes
axes4 = axes('Parent',figure1,...
    'Position',[0.0499994288223393 0.566755840358354 0.301635388739946 0.34814990512334]);
% Uncomment the following line to preserve the X-limits of the axes
xlim(axes4,[-1.5 1.5]);
% Uncomment the following line to preserve the Y-limits of the axes
ylim(axes4,[-1.5 1.5]);
box(axes4,'on');
grid(axes4,'on');
hold(axes4,'all');

% Create plot
plot(Y4(1,:),'Parent',axes4,'MarkerSize',1,'Marker','.','LineStyle','none','Color',[0 0 1]);
% plot(Y4,'Parent',axes4,'MarkerSize',6,'Marker','*','LineStyle','none','Color',[0 0 1]);

% Create plot
plot(Y5,'Parent',axes4,'Marker','*','LineStyle','none','Color',[1 0 0]);

% annotation(figure1,'textbox',[0.8 0.85 0.5 0.05], 'String',{['FFT: ' num2str(params.NFFT)]},'EdgeColor','none');

annotation(figure1,'textbox',[0.8 0.85 0.5 0.05], 'String',{['FFT: ' num2str(params.NFFT)]},'EdgeColor','none');
annotation(figure1,'textbox',[0.8 0.80 0.5 0.05], 'String',{[num2str(2^params.Nbpsc), '-QAM ']},'EdgeColor','none');
annotation(figure1,'textbox',[0.8 0.75 0.5 0.05], 'String',{'SNR: '},'EdgeColor','none');
annotation(figure1,'textbox',[0.83 0.70 0.5 0.05], 'String',{num2str(snr)},'EdgeColor','none');
% annotation(figure1,'textbox',[0.8 0.65 0.5 0.05], 'String',{'Mean Power :'},'EdgeColor','none');
% annotation(figure1,'textbox',[0.83 0.60 0.5 0.05], 'String',{[num2str(mean_pwr/1e-3, '\n%3.1e'), ' mW']},'EdgeColor','none');
annotation(figure1,'textbox',[0.8 0.55 0.5 0.05], 'String',{'Q: '},'EdgeColor','none');
annotation(figure1,'textbox',[0.83 0.50 0.5 0.05], 'String',{[num2str(10*log10(2*frame.ESNR))]},'EdgeColor','none');
annotation(figure1,'textbox',[0.8 0.45 0.5 0.05], 'String',{'EVM: '},'EdgeColor','none');
annotation(figure1,'textbox',[0.83 0.40 0.5 0.05], 'String',{[num2str(frame.EVM_dB),'dB']},'EdgeColor','none');
annotation(figure1,'textbox',[0.8 0.35 0.5 0.05], 'String',{'Sync: '},'EdgeColor','none');
annotation(figure1,'textbox',[0.83 0.30 0.5 0.05], 'String',{[num2str(frame.syncpoint),'']},'EdgeColor','none');

% annotation(figure1,'textbox',[0.8 0.25 0.5 0.05], 'String',{'Mean Noise Power :'},'EdgeColor','none');
% annotation(figure1,'textbox',[0.83 0.20 0.5 0.05], 'String',{[num2str(mean_noise_power/1e-3, '\n%3.1e'), ' mW']},'EdgeColor','none');
%annotation(figure1,'textbox',[0.8 0.15 0.5 0.05], 'String',{'IQ offset :'},'EdgeColor','none');
%annotation(figure1,'textbox',[0.83 0.10 0.5 0.05], 'String',{[num2str(sim.iqoffset)]},'EdgeColor','none');

annotation(figure1,'textbox',[0.8 0.15 0.5 0.05], 'String',{'N bit err :'},'EdgeColor','none');
annotation(figure1,'textbox',[0.83 0.10 0.5 0.05], 'String',{[num2str(frame.Nbiterr)]},'EdgeColor','none');






% figure;hold
% Hs=spectrum.periodogram;
% psd(Hs,noisyreceivein(1,:), 'Fs',1/params.SampleTime)
